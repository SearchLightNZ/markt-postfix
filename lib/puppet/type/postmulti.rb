# @summary Type to manage postmulti instances.
Puppet::Type.newtype(:postmulti) do
  @doc = "Manage postfix instances.

    Example:

        postmulti { 'postfix-out': }
  "

  ensurable do
    newvalue(:active) do
      @resource.activate
      nil # return nil so the event is autogenerated
    end

    newvalue(:inactive) do
      @resource.deactivate
      nil # return nil so the event is autogenerated
    end

    newvalue(:absent) do
      @resource.provider.destroy
      nil # return nil so the event is autogenerated
    end

    aliasvalue(:present, :active)

    defaultto do
      :active if @resource.managed?
    end

    def retrieve
      if (prov = @resource.provider) && prov.respond_to?(:ensure)
        prov.ensure
      else
        :absent
      end
    end
  end

  newparam(:name, namevar: true) do
    desc "Name of the postmulti instance. Must must start with 'postfix-'"
    validate do |value|
      unless value =~ %r{^postfix\-} # rubocop:disable all
        raise ArgumentError,
              'Invalid name: %{name}. ' \
                     'New instance name must start with "postfix-"' % { name: value }
      end
    end
  end

  newproperty(:group) do
    desc 'Name of the instance group.'
  end

  validate do
    self[:ensure] ||= :active
  end

  def create
    return unless (@parameters[:ensure] || newattr(:ensure)).retrieve == :absent

    provider.create
  end

  def activate
    create
    provider.activate
  end

  def deactivate
    create
    provider.deactivate
  end
end
